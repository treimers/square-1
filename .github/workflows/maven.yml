# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build Native Application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-macosx:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17.0.12'
        distribution: 'temurin'
        cache: 'maven'

    - name: Build with Maven
      run: mvn -B verify

    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-artifacts
        path: |
          target/deploy/osx/Square-1*.dmg
          target/deploy/osx/Square-1*-mac.zip
          target/deploy/osx/Square-1_*.pkg

  build-ubuntu:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17.0.12'
        distribution: 'temurin'
        cache: 'maven'

    - name: Build with Maven
      run: mvn -B verify

    - name: Upload Ubuntu artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ubuntu-artifacts
        path: |
          target/deploy/linux/Square-1*.AppImage
          target/deploy/linux/Square-1*.tar.gz

  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17.0.12'
        distribution: 'temurin'
        cache: 'maven'

    - name: Build with Maven
      run: mvn -B verify

    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-artifacts
        path: |
          target/deploy/windows/Square-1*.exe
          target/deploy/windows/Square-1*.zip

  create-release:
    runs-on: ubuntu-latest
    needs: [build-macosx, build-ubuntu, build-windows]

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: all-artifacts

    - name: Create combined GitHub Release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: latest
        prerelease: false
        files: |
          all-artifacts/**/*
